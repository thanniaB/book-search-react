{"ast":null,"code":"var _jsxFileName = \"/Users/tblanchet/Desktop/book-search-react/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nimport API from '../services/API';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchresults: [],\n      bookInfo: {}\n    };\n\n    this.searchByIsbn = async query => {\n      try {\n        const parameters = \"api/autbibkeys=ISBN:\".concat(query);\n        const response = await API.makeRequest({\n          parameters: parameters,\n          method: 'GET',\n          data: this.state.searchresults\n        });\n        console.log(response);\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.searchForBooks = (query, type) => {\n      if (type === 'isbn') {\n        this.searchByIsbn(query);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      searchForBooks: this.searchForBooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tblanchet/Desktop/book-search-react/src/components/App.js"],"names":["React","SearchForm","SearchResults","API","App","Component","state","searchresults","bookInfo","searchByIsbn","query","parameters","response","makeRequest","method","data","console","log","error","alert","searchForBooks","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADwB;;AAAA,SAQhCC,YARgC,GAQjB,MAAOC,KAAP,IAAiB;AAC9B,UAAI;AACF,cAAMC,UAAU,iCAA0BD,KAA1B,CAAhB;AACA,cAAME,QAAQ,GAAG,MAAMT,GAAG,CAACU,WAAJ,CAAgB;AAAEF,UAAAA,UAAU,EAAEA,UAAd;AAA0BG,UAAAA,MAAM,EAAE,KAAlC;AAAyCC,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC;AAA1D,SAAhB,CAAvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,OAJD,CAIE,OAAOM,KAAP,EAAc;AACdC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAhB+B;;AAAA,SAkBhCE,cAlBgC,GAkBf,CAACV,KAAD,EAAQW,IAAR,KAAiB;AAChC,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAKZ,YAAL,CAAkBC,KAAlB;AACD;AAEF,KAvB+B;AAAA;;AAyBhCY,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,KAAKF,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAjC+B;;AAqClC,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nimport API from '../services/API';\n\nclass App extends React.Component {\n  state = {\n    searchresults: [],\n    bookInfo: {\n      \n    }\n  }\n\n  searchByIsbn = async (query) => {\n    try {\n      const parameters = `api/autbibkeys=ISBN:${query}`;\n      const response = await API.makeRequest({ parameters: parameters, method: 'GET', data: this.state.searchresults });\n      console.log(response);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  searchForBooks = (query, type) => {\n    if (type === 'isbn') {\n      this.searchByIsbn(query);\n    }\n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SearchForm searchForBooks={this.searchForBooks} />\n        <SearchResults />\n      </React.Fragment>\n\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}