{"ast":null,"code":"var _jsxFileName = \"/Users/tblanchet/Desktop/book-search-react/src/components/App.js\";\nimport React from 'react';\nimport Search from './Search';\nimport SearchResults from './SearchResults';\nimport API from '../services/API';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchresults: []\n    };\n\n    this.searchForBooks = (query, type) => {\n      if (type === 'isbn') {}\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tblanchet/Desktop/book-search-react/src/components/App.js"],"names":["React","Search","SearchResults","API","App","Component","state","searchresults","searchForBooks","query","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,aAAa,EAAE;AADT,KADwB;;AAAA,SAKhCC,cALgC,GAKf,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAChC,UAAGA,IAAI,KAAK,MAAZ,EAAoB,CAEnB;AAGF,KAX+B;AAAA;;AAahCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AArB+B;;AAyBlC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport Search from './Search';\nimport SearchResults from './SearchResults';\nimport API from '../services/API';\n\nclass App extends React.Component {\n  state = {\n    searchresults: []\n  }\n\n  searchForBooks = (query, type) => {\n    if(type === 'isbn') {\n\n    }\n    \n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Search />\n        <SearchResults />\n      </React.Fragment>\n\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}